@extends('layouts.guru')

@section('title', 'Absen Guru')

@section('content')
  <div class="container mx-auto px-4 py-8">
    <h1 class="text-4xl font-bold text-center text-gray-800 mb-8">Absensi Guru</h1>

    <section class="bg-white shadow-lg rounded-xl p-8 mb-12 max-w-3xl mx-auto">
      <h2 class="text-2xl font-semibold mb-6 text-center text-gray-700">Ambil Foto untuk Absensi</h2>

      <!-- Pilih Jenis Absensi -->
      <div class="mb-6 text-center">
        <label for="jenis_absensi" class="block text-lg font-medium text-gray-700 mb-2">Pilih Jenis Absensi:</label>
        <select id="jenis_absensi" class="rounded-lg border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 px-4 py-2" required>
          <option value="">-- Pilih --</option>
          <option value="masuk">Masuk</option>
          <option value="pulang">Pulang</option>
        </select>
      </div>

      <!-- Kamera -->
      <div class="flex justify-center items-center mb-6">
        <video id="video" class="rounded-lg shadow-md" width="100%" height="auto" autoplay playsinline></video>
      </div>

      <!-- Tombol -->
      <div class="flex justify-center gap-6 mb-4">
        <button id="capture-btn" class="bg-blue-600 hover:bg-blue-700 text-white px-8 py-3 rounded-lg shadow-lg transition duration-300 ease-in-out transform hover:scale-105">
          Ambil Foto
        </button>
        <button id="submit-btn" class="bg-green-600 hover:bg-green-700 text-white px-8 py-3 rounded-lg shadow-lg transition duration-300 ease-in-out transform hover:scale-105" disabled>
          Kirim Absensi
        </button>
      </div>

      <!-- Preview Foto -->
      <div class="flex justify-center mt-6">
        <canvas id="canvas" class="hidden rounded shadow-lg"></canvas>
      </div>

      <!-- Info Lokasi dan Peta -->
      <div class="mt-8">
        <p id="lokasi-info" class="text-sm text-gray-500 text-center mb-2"></p>
        <div class="bg-gray-100 rounded-lg shadow-inner p-2">
          <div id="map" style="width: 100%; height: 200px; border-radius: 8px;"></div>
        </div>
      </div>

      <p class="text-sm text-gray-600 mt-6 text-center">
        Pastikan Anda berada di area sekolah saat melakukan absensi. Foto dan lokasi akan dikirim sebagai bukti kehadiran.
      </p>
    </section>
  </div>
@endsection

@push('scripts')
  <script>
    const video = document.getElementById('video');
    const canvas = document.getElementById('canvas');
    const captureBtn = document.getElementById('capture-btn');
    const submitBtn = document.getElementById('submit-btn');
    const jenisSelect = document.getElementById('jenis_absensi');
    const lokasiInfo = document.getElementById('lokasi-info');

    const SCHOOL_LAT = {{ $pengaturan->lath_lokasi }};
    const SCHOOL_LNG = {{ $pengaturan->long_lokasi }};
    const ALLOWED_RADIUS = {{ $pengaturan->radius_absen }};

    let map, userMarker, schoolMarker;
    let latestCoords = null;
    let stream;

    function initMap() {
      map = new google.maps.Map(document.getElementById("map"), {
        center: { lat: SCHOOL_LAT, lng: SCHOOL_LNG },
        zoom: 16,
      });

      schoolMarker = new google.maps.Marker({
        position: { lat: SCHOOL_LAT, lng: SCHOOL_LNG },
        map,
        title: "Lokasi Sekolah",
        icon: "http://maps.google.com/mapfiles/ms/icons/green-dot.png"
      });
    }

    function updateUserLocation(lat, lng) {
      if (!userMarker) {
        userMarker = new google.maps.Marker({
          map,
          position: { lat, lng },
          title: "Lokasi Anda",
          icon: "http://maps.google.com/mapfiles/ms/icons/red-dot.png"
        });
      } else {
        userMarker.setPosition({ lat, lng });
      }
      map.setCenter({ lat, lng });
    }

    function getDistanceMeters(lat1, lon1, lat2, lon2) {
      const R = 6371e3;
      const φ1 = lat1 * Math.PI / 180;
      const φ2 = lat2 * Math.PI / 180;
      const Δφ = (lat2 - lat1) * Math.PI / 180;
      const Δλ = (lon2 - lon1) * Math.PI / 180;

      const a = Math.sin(Δφ / 2) ** 2 + Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) ** 2;
      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
      return R * c;
    }

    function checkLocationAccurate() {
      if (!navigator.geolocation) {
        alert('Browser tidak mendukung Geolocation.');
        return;
      }

      navigator.geolocation.getCurrentPosition((pos) => {
        const lat = pos.coords.latitude;
        const lng = pos.coords.longitude;
        latestCoords = { lat, lng };

        const distance = getDistanceMeters(lat, lng, SCHOOL_LAT, SCHOOL_LNG);
        lokasiInfo.innerText = `Lokasi Anda: ${lat.toFixed(5)}, ${lng.toFixed(5)} (Jarak: ${distance.toFixed(2)} meter)`;

        updateUserLocation(lat, lng);

        if (distance <= ALLOWED_RADIUS) {
          submitBtn.disabled = false;
        } else {
          submitBtn.disabled = true;
          alert('Anda berada di luar radius lokasi yang diizinkan.');
        }
      }, (err) => {
        alert("Gagal mendapatkan lokasi: " + err.message);
      }, {
        enableHighAccuracy: true,
        timeout: 10000,
        maximumAge: 0
      });
    }

    async function startCamera() {
      try {
        stream = await navigator.mediaDevices.getUserMedia({ video: { facingMode: 'user' } });
        video.srcObject = stream;
      } catch (err) {
        alert("Gagal mengakses kamera: " + err.message);
      }
    }

    captureBtn.addEventListener('click', () => {
      const jenis = jenisSelect.value;
      if (!jenis) return alert("Silakan pilih jenis absensi.");

      const ctx = canvas.getContext('2d');
      canvas.width = video.videoWidth;
      canvas.height = video.videoHeight;

      ctx.save();
      ctx.translate(canvas.width, 0);
      ctx.scale(-1, 1);
      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);
      ctx.restore();

      canvas.classList.remove('hidden');
      checkLocationAccurate();
    });

    submitBtn.addEventListener('click', async () => {
      const jenis = jenisSelect.value;
      const dataUrl = canvas.toDataURL('image/png');

      if (!latestCoords) {
        alert("Lokasi tidak tersedia.");
        return;
      }

      const lokasi = `${latestCoords.lat},${latestCoords.lng}`;

      try {
        const response = await fetch("{{ route('guru.absensi.store') }}", {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-TOKEN': '{{ csrf_token() }}'
          },
          body: JSON.stringify({ image: dataUrl, lokasi: lokasi, jenis: jenis })
        });

        const result = await response.json();
        if (result.success) {
          alert('Absensi berhasil!');
          window.location.reload();
        } else {
          alert('Gagal mengirim absensi!');
        }
      } catch (err) {
        alert("Terjadi kesalahan: " + err.message);
      }
    });

    window.onload = () => {
      startCamera();
      initMap();
    };
  </script>

  <!-- ✅ Google Maps API -->
  <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_GOOGLE_MAPS_API_KEY&callback=initMap" async defer></script>
@endpush
